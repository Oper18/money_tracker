{"version":3,"sources":["components/LoginForm.js","components/Purchase.js","components/Accumulation.js","components/Debt.js","components/Loan.js","components/ComingIns.js","App.js","reportWebVitals.js","index.js"],"names":["LoginForm","state","username","password","handle_change","e","name","target","value","setState","prevstate","newState","onSubmit","props","handle_login","className","htmlFor","type","this","onChange","React","Component","_","require","Purchase","createPurchase","purchase_name","document","getElementById","purchase_value","purchase_currency","options","selectedIndex","dataset","id","purchase_complete","checked","data","currency","complete","uri","process","fetch","method","headers","Authorization","localStorage","getItem","body","JSON","stringify","then","res","status","mes","innerHTML","style","display","color","json","catchError","purchases","prescheduled","item","concat","balance","balance_currency","prescheduled_purchase_sum","parseFloat","rub_value","toFixed","correctPurchase","purchase_id","complete_purchase","includes","classList","add","filter","p","parseInt","sum","logged_in","displayed_form","items","map","purchase","data-id","created_at","split","step","defaultValue","debounce","renderCurrencies","currency_name","onClick","renderPrescheduledPurchaseList","renderPurchaseList","Accumulation","createAccumulation","accumulation_name","accumulation_value","accumulation_currency","accumulation_type","choosen_type","accumulations","accumulations_sum","accumulation_types","correctAccumulation","accumulation_id","complete_accumulation","closed","t","accumulation","accumulation_type_name","setAccumulationType","bind","renderAccumulationList","CreatableSingle","handleChange","newValue","actionMeta","isClearable","onInputChange","handleInputChange","Debt","createDebt","debt_name","debt_value","debt_currency","debt_end_date","end_date","debts","debts_sum","correctDebt","debt_id","complete_debt","debt","correctdebt","renderDebtList","Loan","createLoan","loan_name","loan_value","loan_currency","loans","loans_sum","correctLoan","loan_id","complete_loan","loan","renderLoanList","ComingIns","createComingIns","coming_ins_name","coming_ins_value","coming_ins_currency","coming_ins","coming_in","renderComingInsList","App","preventDefault","Error","setItem","access_token","refresh_token","user","currencies","catch","error","removeItem","handle_logout","refresh_login","showMenu","menu","chooseTabMoneyMove","remove","form","cls_wrapper_name","head_menu","side_bar","src","alt","width","href","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9288a4d3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass LoginForm extends React.Component {\n  state = {\n    username: '',\n    password: ''\n  };\n\n  handle_change = e => {\n    const name = e.target.name;\n    const value = e.target.value;\n    this.setState(prevstate => {\n      const newState = { ...prevstate };\n      newState[name] = value;\n      return newState;\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={e => this.props.handle_login(e, this.state)} className='login_form'>\n        <div className='login_fields_wrapper'>\n            <div className='login_field_wrapper'>\n                <h4 className='login_header'>Вход</h4>\n            </div>\n            <div className='login_field_wrapper'>\n                <label htmlFor=\"username\">Логин</label>\n                <input\n                  className=\"login-input\"\n                  type=\"text\"\n                  name=\"username\"\n                  value={this.state.username}\n                  onChange={this.handle_change}\n                />\n            </div>\n            <div className='login_field_wrapper'>\n                <label htmlFor=\"password\">Пароль</label>\n                <input\n                  className=\"login-input\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={this.state.password}\n                  onChange={this.handle_change}\n                />\n            </div>\n            <div className='login_field_wrapper'>\n                <input type=\"submit\" value='Войти' className='submit_button' />\n            </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default LoginForm;\n\nLoginForm.propTypes = {\n  handle_login: PropTypes.func.isRequired\n};","import React from 'react';\n\nvar _ = require('lodash');\n\nclass Purchase extends(React.Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            purchases: [],\n            balance: 0.0,\n            balance_currency: null,\n            prescheduled_purchase_sum: 0.0,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.logged_in) {\n            this.setState({displayed_form: ''})\n            var uri = process.env.REACT_APP_BACKEND_URI + '/api/purchase?all=1&completed=1';\n            if (this.props.prescheduled) {\n                uri = process.env.REACT_APP_BACKEND_URI + '/api/purchase?prescheduled=1';\n            }\n            fetch(uri, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    this.setState({\n                        purchases: json.items,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        prescheduled_purchase_sum: parseFloat(json.sum).toFixed(2)\n                    });\n                })\n        }\n        else {\n            this.props.catchError();\n        }\n    }\n\n    createPurchase = (e) => {\n        var purchase_name = document.getElementById('purchase-name-id');\n        var purchase_value = document.getElementById('purchase-value-id');\n        var purchase_currency = document.getElementById('purchase-currency-id');\n        purchase_currency = purchase_currency.options[purchase_currency.selectedIndex].dataset.id;\n        var purchase_complete = document.getElementById('complete-purchase-id').checked;\n        var data = {name: purchase_name.value, value: purchase_value.value, currency: purchase_currency, complete: purchase_complete};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/purchase';\n        if (document.getElementById('loan-purchase-id').checked) {\n            uri = process.env.REACT_APP_BACKEND_URI + '/api/loans';\n        }\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    purchase_name.value = '';\n                    purchase_value.value = 0.00;\n                    document.getElementById('loan-purchase-id').checked = false;\n                    document.getElementById('complete-purchase-id').checked = false;\n                    var purchases = this.state.purchases;\n                    if (this.props.prescheduled && !purchase_complete) {\n                        purchases = [json.item].concat(purchases);\n                        this.setState({\n                            purchases: purchases,\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            prescheduled_purchase_sum: (parseFloat(this.state.prescheduled_purchase_sum) + parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                    else if (!this.props.prescheduled && purchase_complete) {\n                        purchases = [json.item].concat(purchases);\n                        this.setState({\n                            purchases: purchases,\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            prescheduled_purchase_sum: (parseFloat(this.state.prescheduled_purchase_sum) + parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                }\n            })\n    }\n\n    correctPurchase = (e) => {\n        var purchase_id = e.target.dataset.id;\n        var complete_purchase = false;\n        if (e.target.id.includes('complete-purchase-id')) {\n            complete_purchase = e.target.checked;\n        }\n        var purchase_value = document.getElementById('purchase-value-id-' + purchase_id);\n        var purchase_currency = document.getElementById('purchase-currency-id' + purchase_id);\n        purchase_currency = purchase_currency.options[purchase_currency.selectedIndex].dataset.id;\n        var data = {complete: complete_purchase, value: purchase_value.value, currency: purchase_currency, id: purchase_id};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/purchase', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    document.getElementById('purchase_' + purchase_id).classList.add('danger_update_purchase');\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    document.getElementById('purchase_' + purchase_id).classList.add('success_update_purchase');\n                    if (complete_purchase) {\n                        var purchases = this.state.purchases;\n                        purchases = purchases.filter(p => parseInt(p['id']) !== parseInt(purchase_id));\n                        if (this.props.prescheduled) {\n                            this.setState({\n                                purchases: purchases,\n                                balance: json.balance['value'],\n                                balance_currency: json.balance['currency'],\n                                prescheduled_purchase_sum: parseFloat(json.sum).toFixed(2)\n                            });\n                        }\n                        else {\n                            this.setState({\n                                purchases: purchases,\n                                balance: json.balance['value'],\n                                balance_currency: json.balance['currency'],\n                            });\n                        }\n                    }\n                    else {\n                        if (this.props.prescheduled) {\n                            this.setState({\n                                balance: json.balance['value'],\n                                balance_currency: json.balance['currency'],\n                                prescheduled_purchase_sum: parseFloat(json.sum).toFixed(2)\n                            });\n                        }\n                        else{\n                            this.setState({\n                                balance: json.balance['value'],\n                                balance_currency: json.balance['currency'],\n                            });\n                        }\n                    }\n                }\n            })\n    }\n\n    renderPrescheduledPurchaseList() {\n        return this.state.purchases.map((purchase) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'purchase_' + purchase.id}\n                    key={'purchase_' + purchase.id} data-id={purchase.id}>\n                    <div className='purchase_chbox_date_wrapper'>\n                        <div className='purchase_row_item preschedule_purchase_chbox_wrapper'>\n                            <div className='custom_chbox_wrapper'>\n                                <input type='checkbox' id={'complete-purchase-id-' + purchase.id} name={'purchase_complete-' + purchase.id}\n                                    className='complete_purchase_chbox' data-id={purchase.id} onChange={this.correctPurchase} />\n                                <span className='complete_purchase_chbox_span'></span>\n                            </div>\n                        </div>\n                        <div className='purchase_row_item purchase_date_wrapper'>\n                            <span className='purchase_date'>{purchase.created_at.split('T')[0]}</span>\n                            <span className='purchase_time'>{purchase.created_at.split('T')[1].split('.')[0]}</span>\n                        </div>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item purchase_name_span_wrapper'>\n                            <span className='purchase_name_span'>{purchase.name}</span>\n                        </div>\n                        <div className='purchase_row_item'>\n                            <div className='purchase_value_currency_wrapper'>\n                                <div className='purchase_value'>\n                                    <input type='number' step='0.01' className='purchase_value exist_purchase_input' id={'purchase-value-id-' + purchase.id}\n                                        data-id={purchase.id} defaultValue={purchase.value} onChange={_.debounce(this.correctPurchase, 500)} />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id={'purchase-currency-id' + purchase.id} className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    renderPurchaseList() {\n        return this.state.purchases.map((purchase) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'purchase_' + purchase.id}\n                    key={'purchase_' + purchase.id} data-id={purchase.id}>\n                    <div className='purchase_row_item purchase_date_wrapper'>\n                        <span className='purchase_date'>{purchase.created_at.split('T')[0]}</span>\n                        <span className='purchase_time'>{purchase.created_at.split('T')[1].split('.')[0]}</span>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item purchase_name_span_wrapper'>\n                            <span className='purchase_name_span'>{purchase.name}</span>\n                        </div>\n                        <div className='purchase_row_item purchase_value_span_wrapper'>\n                            <span className='purchase_value_span'>{purchase.value}</span>\n                            <span className='purchase_currency_span'> {purchase.currency_name}</span>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render () {\n        if (this.props.logged_in) {\n            return (\n                <div className='mainwindow'>\n                    <div className='balance_wrapper'>\n                        <span>Баланс: </span>\n                        <span>{this.state.balance} </span>\n                        {this.state.balance_currency\n                            ? <span>{this.state.balance_currency}</span>\n                            : ''\n                        }\n                    </div>\n                    <div className='prescheduled_purchase_sum_wrapper'>\n                        {this.props.prescheduled\n                            ? <span>Общая сумма {this.state.prescheduled_purchase_sum} rub</span>\n                            : ''\n                        }\n                    </div>\n\n                    <div className='page_wrapper'>\n                        <div className='create_purchase_wrapper' id='create-purchase-wrapper-id'>\n                            <div className='purchase_value_label'>\n                                Название платежа\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='text' className='purchase_name' id='purchase-name-id' />\n                            </div>\n                            <div className='purchase_value_label'>\n                                Потраченная сумма\n                            </div>\n                            <div className='purchase_wrapper'>\n                                <div className='purchase_value_wrapper'>\n                                    <input type='number' step='0.01' className='purchase_value' id='purchase-value-id' />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id='purchase-currency-id' className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className='complete_purchase_wrapper'>\n                                <div className='custom_chbox_wrapper'>\n                                    <input type='checkbox' id='complete-purchase-id' name='purchase_complete' className='complete_purchase_chbox' />\n                                    <span className='complete_purchase_chbox_span'></span>\n                                </div>\n                                <div className='custom_chbox_text_wrapper'>Выполнен</div>\n                            </div>\n                            <div className='complete_purchase_wrapper'>\n                                <div className='custom_chbox_wrapper'>\n                                    <input type='checkbox' id='loan-purchase-id' name='loan_complete' className='complete_purchase_chbox' />\n                                    <span className='complete_purchase_chbox_span'></span>\n                                </div>\n                                <div className='custom_chbox_text_wrapper'>В долг</div>\n                            </div>\n                            <div className='create_purchase_wrapper'>\n                                <div className='create_purchase_btn' id='create-purchase-id' onClick={this.createPurchase}>\n                                    Отправить\n                                </div>\n                            </div>\n                            <div className='purchase_create_message' id='purchase-create-message-id'>\n                            </div>\n                        </div>\n\n                        <div className='purchase_table_wrapper'>\n                            {this.props.prescheduled\n                                ? <div className='purchase_table'>{this.renderPrescheduledPurchaseList()}</div>\n                                : <div className='purchase_table'>{this.renderPurchaseList()}</div>\n                            }\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Purchase","import React from 'react';\nimport CreatableSelect from 'react-select/creatable';\n\nvar _ = require('lodash');\n\nclass Accumulation extends(React.Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            accumulations: [],\n            accumulations_sum: 0.0,\n            balance: 0.0,\n            balance_currency: null,\n            accumulation_types: [],\n            choosen_type: '',\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.logged_in) {\n            this.setState({displayed_form: ''})\n            var uri = process.env.REACT_APP_BACKEND_URI + '/api/accumulation';\n            fetch(uri, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    this.setState({\n                        accumulations: json.items,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        accumulations_sum: parseFloat(json.sum).toFixed(2),\n                        accumulation_types: json.accumulation_types,\n                    });\n                })\n        }\n        else {\n            this.props.catchError();\n        }\n    }\n\n    createAccumulation = (e) => {\n        var accumulation_name = document.getElementById('accumulation-name-id');\n        var accumulation_value = document.getElementById('accumulation-value-id');\n        var accumulation_currency = document.getElementById('accumulation-currency-id');\n        accumulation_currency = accumulation_currency.options[accumulation_currency.selectedIndex].dataset.id;\n        var data = {name: accumulation_name.value, value: accumulation_value.value, currency: accumulation_currency, accumulation_type: this.state.choosen_type};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/accumulation';\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('accumulation-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('accumulation-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    accumulation_name.value = '';\n                    accumulation_value.value = 0.00;\n                    var accumulations = this.state.accumulations;\n                    accumulations = [json.item].concat(accumulations);\n                    this.setState({\n                        accumulations: accumulations,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        accumulations_sum: (parseFloat(this.state.accumulations_sum) + parseFloat(json.rub_value)).toFixed(2),\n                        accumulation_types: json.accumulation_types,\n                    });\n                }\n            })\n    }\n\n    correctAccumulation = (e) => {\n        var accumulation_id = e.target.dataset.id;\n        var complete_accumulation = false;\n        if (e.target.id.includes('complete-accumulation-id')) {\n            complete_accumulation = e.target.checked;\n        }\n        var accumulation_value = document.getElementById('accumulation-value-id-' + accumulation_id);\n        var accumulation_currency = document.getElementById('accumulation-currency-id' + accumulation_id);\n        accumulation_currency = accumulation_currency.options[accumulation_currency.selectedIndex].dataset.id;\n        var data = {closed: complete_accumulation, value: accumulation_value.value, currency: accumulation_currency, id: accumulation_id};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/accumulation', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    document.getElementById('accumulation_' + accumulation_id).classList.add('danger_update_accumulation');\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    document.getElementById('accumulation_' + accumulation_id).classList.add('success_update_accumulation');\n                    if (complete_accumulation) {\n                        var accumulations = this.state.accumulations;\n                        accumulations = accumulations.filter(p => parseInt(p['id']) !== parseInt(accumulation_id));\n                        this.setState({\n                            accumulations: accumulations,\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            accumulations_sum: (parseFloat(this.state.accumulations_sum) - parseFloat(json.rub_value)).toFixed(2),\n                            accumulation_types: json.accumulation_types,\n                        });\n                    }\n                    else {\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            accumulations_sum: (parseFloat(this.state.accumulations_sum) - parseFloat(json.rub_value)).toFixed(2),\n                            accumulation_types: json.accumulation_types,\n                        });\n                    }\n                }\n            })\n    }\n\n    setAccumulationType(t) {\n        this.setState({choosen_type: t});\n    }\n\n    renderAccumulationList() {\n        return this.state.accumulations.map((accumulation) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'accumulation_' + accumulation.id}\n                    key={'accumulation_' + accumulation.id} data-id={accumulation.id}>\n                    <div className='purchase_chbox_date_wrapper'>\n                        <div className='purchase_row_item preschedule_purchase_chbox_wrapper'>\n                            <div className='custom_chbox_wrapper'>\n                                <input type='checkbox' id={'complete-accumulation-id-' + accumulation.id} name={'accumulation_complete-' + accumulation.id}\n                                    className='complete_purchase_chbox' data-id={accumulation.id} onChange={this.correctAccumulation} />\n                                <span className='complete_purchase_chbox_span'></span>\n                            </div>\n                        </div>\n                        <div className='purchase_row_item purchase_date_wrapper'>\n                            <span className='purchase_time'>Закрыть</span>\n                            <span className='purchase_date'>{accumulation.accumulation_type_name}</span>\n                        </div>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item'>\n                            <span className='purchase_name'>{accumulation.name}</span>\n                        </div>\n                        <div className='purchase_row_item'>\n                            <div className='purchase_value_currency_wrapper'>\n                                <div className='purchase_value'>\n                                    <input type='number' step='0.01' className='purchase_value exist_purchase_input' id={'accumulation-value-id-' + accumulation.id}\n                                        data-id={accumulation.id} defaultValue={accumulation.value} onChange={_.debounce(this.correctAccumulation, 500)} />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id={'accumulation-currency-id' + accumulation.id} className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                           </div>\n                       </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render () {\n        if (this.props.logged_in) {\n            return (\n                <div className='mainwindow'>\n                    <div className='balance_wrapper'>\n                        <span>Баланс: </span>\n                        <span>{this.state.balance} </span>\n                        {this.state.balance_currency\n                            ? <span>{this.state.balance_currency}</span>\n                            : ''\n                        }\n                    </div>\n\n                    <div className='page_wrapper'>\n                        <div className='create_purchase_wrapper' id='create-purchase-wrapper-id'>\n                            <div className='purchase_value_label'>\n                                Название накопления\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='text' className='purchase_name' id='accumulation-name-id' />\n                            </div>\n                            <div className='purchase_value_label'>\n                                Накопленная сумма\n                            </div>\n                            <div className='purchase_wrapper'>\n                                <div className='purchase_value_wrapper'>\n                                    <input type='number' step='0.01' className='purchase_value' id='accumulation-value-id' />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id='accumulation-currency-id' className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className='purchase_value_label'>\n                                Тип накопления\n                            </div>\n                            <div className='accumulation_type_select_wrapper'>\n                                <CreatableSingle accumulation_types={this.state.accumulation_types} setAccumulationType={this.setAccumulationType.bind(this)} />\n                            </div>\n                            <div className='create_purchase_wrapper'>\n                                <div className='create_purchase_btn' id='create-accumulation-id' onClick={this.createAccumulation}>\n                                    Отправить\n                                </div>\n                            </div>\n                            <div className='purchase_create_message' id='accumulation-create-message-id'>\n                            </div>\n                        </div>\n\n                        <div className='purchase_table_wrapper'>\n                            <div className='purchase_table'>{this.renderAccumulationList()}</div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n}\n\nclass CreatableSingle extends React.Component<*, State> {\n    handleChange = (newValue: any, actionMeta: any) => {\n        if (newValue) {\n            this.props.setAccumulationType(newValue.value);\n        }\n        else {\n            this.props.setAccumulationType('');\n        }\n    };\n    render() {\n        return (\n            <CreatableSelect\n                isClearable\n                onChange={this.handleChange}\n                onInputChange={this.handleInputChange}\n                options={this.props.accumulation_types}\n            />\n        );\n    }\n}\n\nexport default Accumulation","import React from 'react';\n\nvar _ = require('lodash');\n\nclass Debt extends(React.Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            debts: [],\n            debts_sum: 0.0,\n            balance: 0.0,\n            balance_currency: null,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.logged_in) {\n            this.setState({displayed_form: ''})\n            var uri = process.env.REACT_APP_BACKEND_URI + '/api/debts';\n            fetch(uri, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    this.setState({\n                        debts: json.items,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        debts_sum: parseFloat(json.sum).toFixed(2)\n                    });\n                })\n        }\n        else {\n            this.props.catchError();\n        }\n    }\n\n    createDebt = (e) => {\n        var debt_name = document.getElementById('debt-name-id');\n        var debt_value = document.getElementById('debt-value-id');\n        var debt_currency = document.getElementById('debt-currency-id');\n        debt_currency = debt_currency.options[debt_currency.selectedIndex].dataset.id;\n        var debt_end_date = document.getElementById('debt-end-date-id');\n        var data = {name: debt_name.value, value: debt_value.value, currency: debt_currency, end_date: debt_end_date.value};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/debts';\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('debt-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('debt-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    debt_name.value = '';\n                    debt_value.value = 0.00;\n                    debt_end_date.value = '';\n                    var debts = this.state.debts;\n                    debts = [json.item].concat(debts);\n                    this.setState({\n                        debts: debts,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        debts_sum: (parseFloat(this.state.debts_sum) + parseFloat(json.rub_value)).toFixed(2)\n                    });\n                }\n            })\n    }\n\n    correctDebt = (e) => {\n        var debt_id = e.target.dataset.id;\n        var complete_debt = false;\n        if (e.target.id.includes('complete-debt-id')) {\n            complete_debt = e.target.checked;\n        }\n        var debt_value = document.getElementById('debt-value-id-' + debt_id);\n        var debt_currency = document.getElementById('debt-currency-id' + debt_id);\n        debt_currency = debt_currency.options[debt_currency.selectedIndex].dataset.id;\n        var debt_end_date = document.getElementById('debt-end-date-id-' + debt_id);\n        var data = {complete: complete_debt, value: debt_value.value, currency: debt_currency, id: debt_id, end_date: debt_end_date.value};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/debts', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    document.getElementById('debt_' + debt_id).classList.add('danger_update_debt');\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    document.getElementById('debt_' + debt_id).classList.add('success_update_debt');\n                    if (complete_debt) {\n                        var debts = this.state.debts;\n                        debts = debts.filter(p => parseInt(p['id']) !== parseInt(debt_id));\n                        this.setState({\n                            debts: debts,\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            debts_sum: (parseFloat(this.state.debts_sum) - parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                    else {\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            debts_sum: (parseFloat(this.state.debts_sum) - parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                }\n            })\n    }\n\n    renderDebtList() {\n        return this.state.debts.map((debt) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'debt_' + debt.id}\n                    key={'debt_' + debt.id} data-id={debt.id}>\n                    <div className='purchase_chbox_date_wrapper'>\n                        <div className='purchase_row_item preschedule_purchase_chbox_wrapper'>\n                            <div className='custom_chbox_wrapper'>\n                                <input type='checkbox' id={'complete-debt-id-' + debt.id} name={'debt_complete-' + debt.id}\n                                    className='complete_purchase_chbox' data-id={debt.id} onChange={this.correctdebt} />\n                                <span className='complete_purchase_chbox_span'></span>\n                            </div>\n                        </div>\n                        <div className='purchase_row_item purchase_date_wrapper'>\n                            <span className='purchase_date'>{debt.created_at.split('T')[0]}</span>\n                            <span className='purchase_time'>{debt.created_at.split('T')[1].split('.')[0]}</span>\n                        </div>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item purchase_name_span_wrapper'>\n                            <span className='purchase_name'>{debt.name}</span>\n                        </div>\n                        <div className='purchase_row_item'>\n                            <div className='purchase_value_currency_wrapper'>\n                                <div className='purchase_value'>\n                                    <input type='number' step='0.01' className='purchase_value exist_purchase_input' id={'debt-value-id-' + debt.id}\n                                        data-id={debt.id} defaultValue={debt.value} onChange={_.debounce(this.correctDebt, 500)} />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id={'debt-currency-id' + debt.id} className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                           </div>\n                       </div>\n                    </div>\n                    <div className='purchase_row_item'>\n                        <div className='purchase_value'>\n                            <input type='date' className='purchase_end_date' id={'debt-end-date-id-' + debt.id}\n                                data-id={debt.id} defaultValue={debt.end_date} onChange={_.debounce(this.correctDebt, 500)} />\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render () {\n        if (this.props.logged_in) {\n            return (\n                <div className='mainwindow'>\n                    <div className='balance_wrapper'>\n                        <span>Баланс: </span>\n                        <span>{this.state.balance} </span>\n                        {this.state.balance_currency\n                            ? <span>{this.state.balance_currency}</span>\n                            : ''\n                        }\n                    </div>\n                    <div className='prescheduled_purchase_sum_wrapper'>\n                        <span>Сумма долга {this.state.debts_sum} rub</span>\n                    </div>\n\n                    <div className='page_wrapper'>\n                        <div className='create_purchase_wrapper' id='create-debt-wrapper-id'>\n                            <div className='purchase_value_label'>\n                                Название долга\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='text' className='purchase_name' id='debt-name-id' />\n                            </div>\n                            <div className='purchase_value_label'>\n                                Одолженная сумма\n                            </div>\n                            <div className='purchase_wrapper'>\n                                <div className='purchase_value_wrapper'>\n                                    <input type='number' step='0.01' className='purchase_value' id='debt-value-id' />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id='debt-currency-id' className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className='purchase_value_label'>\n                                Дата погашения\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='date' className='purchase_end_date' id='debt-end-date-id' />\n                            </div>\n                            <div className='create_purchase_wrapper'>\n                                <div className='create_purchase_btn' id='create-debt-id' onClick={this.createDebt}>\n                                    Отправить\n                                </div>\n                            </div>\n                            <div className='purchase_create_message' id='debt-create-message-id'>\n                            </div>\n                        </div>\n\n                        <div className='purchase_table_wrapper'>\n                            <div className='purchase_table'>{this.renderDebtList()}</div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Debt","import React from 'react';\n\nvar _ = require('lodash');\n\nclass Loan extends(React.Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loans: [],\n            loans_sum: 0.0,\n            balance: 0.0,\n            balance_currency: null,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.logged_in) {\n            this.setState({displayed_form: ''})\n            var uri = process.env.REACT_APP_BACKEND_URI + '/api/loans';\n            fetch(uri, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    this.setState({\n                        loans: json.items,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        loans_sum: parseFloat(json.sum).toFixed(2)\n                    });\n                })\n        }\n        else {\n            this.props.catchError();\n        }\n    }\n\n    createLoan = (e) => {\n        var loan_name = document.getElementById('loan-name-id');\n        var loan_value = document.getElementById('loan-value-id');\n        var loan_currency = document.getElementById('loan-currency-id');\n        loan_currency = loan_currency.options[loan_currency.selectedIndex].dataset.id;\n        var data = {name: loan_name.value, value: loan_value.value, currency: loan_currency};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/loans';\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('loan-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('loan-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    loan_name.value = '';\n                    loan_value.value = 0.00;\n                    var loans = this.state.loans;\n                    loans = [json.item].concat(loans);\n                    this.setState({\n                        loans: loans,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                        loans_sum: (parseFloat(this.state.loans_sum) + parseFloat(json.rub_value)).toFixed(2)\n                    });\n                }\n            })\n    }\n\n    correctLoan = (e) => {\n        var loan_id = e.target.dataset.id;\n        var complete_loan = false;\n        if (e.target.id.includes('complete-loan-id')) {\n            complete_loan = e.target.checked;\n        }\n        var loan_value = document.getElementById('loan-value-id-' + loan_id);\n        var loan_currency = document.getElementById('loan-currency-id' + loan_id);\n        loan_currency = loan_currency.options[loan_currency.selectedIndex].dataset.id;\n        var data = {closed: complete_loan, value: loan_value.value, currency: loan_currency, id: loan_id};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/loans', {\n            method: 'PUT',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    document.getElementById('loan_' + loan_id).classList.add('danger_update_loan');\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    document.getElementById('loan_' + loan_id).classList.add('success_update_loan');\n                    if (complete_loan) {\n                        var loans = this.state.loans;\n                        loans = loans.filter(p => parseInt(p['id']) !== parseInt(loan_id));\n                        this.setState({\n                            loans: loans,\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            loans_sum: (parseFloat(this.state.loans_sum) - parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                    else {\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            loans_sum: (parseFloat(this.state.loans_sum) - parseFloat(json.rub_value)).toFixed(2)\n                        });\n                    }\n                }\n            })\n    }\n\n    renderLoanList() {\n        return this.state.loans.map((loan) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'loan_' + loan.id}\n                    key={'loan_' + loan.id} data-id={loan.id}>\n                    <div className='purchase_chbox_date_wrapper'>\n                        <div className='purchase_row_item preschedule_purchase_chbox_wrapper'>\n                            <div className='custom_chbox_wrapper'>\n                                <input type='checkbox' id={'complete-loan-id-' + loan.id} name={'loan_complete-' + loan.id}\n                                    className='complete_purchase_chbox' data-id={loan.id} onChange={this.correctLoan} />\n                                <span className='complete_purchase_chbox_span'></span>\n                            </div>\n                        </div>\n                        <div className='purchase_row_item purchase_date_wrapper'>\n                            <span className='purchase_date'>{loan.created_at.split('T')[0]}</span>\n                            <span className='purchase_time'>{loan.created_at.split('T')[1].split('.')[0]}</span>\n                        </div>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item purchase_name_span_wrapper'>\n                            <span className='purchase_name'>{loan.name}</span>\n                        </div>\n                        <div className='purchase_row_item'>\n                            <div className='purchase_value_currency_wrapper'>\n                                <div className='purchase_value'>\n                                    <input type='number' step='0.01' className='purchase_value exist_purchase_input' id={'loan-value-id-' + loan.id}\n                                        data-id={loan.id} defaultValue={loan.value} onChange={_.debounce(this.correctLoan, 500)} />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id={'loan-currency-id' + loan.id} className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                           </div>\n                       </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render () {\n        if (this.props.logged_in) {\n            return (\n                <div className='mainwindow'>\n                    <div className='balance_wrapper'>\n                        <span>Баланс: </span>\n                        <span>{this.state.balance} </span>\n                        {this.state.balance_currency\n                            ? <span>{this.state.balance_currency}</span>\n                            : ''\n                        }\n                    </div>\n                    <div className='prescheduled_purchase_sum_wrapper'>\n                        <span>Сумма долга {this.state.loans_sum} rub</span>\n                    </div>\n\n                    <div className='page_wrapper'>\n                        <div className='create_purchase_wrapper' id='create-loan-wrapper-id'>\n                            <div className='purchase_value_label'>\n                                Название долга\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='text' className='purchase_name' id='loan-name-id' />\n                            </div>\n                            <div className='purchase_value_label'>\n                                Одолженная сумма\n                            </div>\n                            <div className='purchase_wrapper'>\n                                <div className='purchase_value_wrapper'>\n                                    <input type='number' step='0.01' className='purchase_value' id='loan-value-id' />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id='loan-currency-id' className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                            <div className='create_purchase_wrapper'>\n                                <div className='create_purchase_btn' id='create-loan-id' onClick={this.createLoan}>\n                                    Отправить\n                                </div>\n                            </div>\n                            <div className='purchase_create_message' id='loan-create-message-id'>\n                            </div>\n                        </div>\n\n                        <div className='purchase_table_wrapper'>\n                            <div className='purchase_table'>{this.renderLoanList()}</div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Loan","import React from 'react';\n\nclass ComingIns extends(React.Component) {\n    constructor(props) {\n        super(props);\n        this.state = {\n            coming_ins: [],\n            balance: 0.0,\n            balance_currency: null,\n        }\n    }\n\n    componentDidMount() {\n        if (this.props.logged_in) {\n            this.setState({displayed_form: ''})\n            var uri = process.env.REACT_APP_BACKEND_URI + '/api/coming_ins';\n            fetch(uri, {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    this.setState({\n                        coming_ins: json.items,\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency'],\n                    });\n                })\n        }\n        else {\n            this.props.catchError();\n        }\n    }\n\n    createComingIns = (e) => {\n        var coming_ins_name = document.getElementById('coming-ins-name-id');\n        var coming_ins_value = document.getElementById('coming-ins-value-id');\n        var coming_ins_currency = document.getElementById('coming-ins-currency-id');\n        coming_ins_currency = coming_ins_currency.options[coming_ins_currency.selectedIndex].dataset.id;\n        var data = {name: coming_ins_name.value, value: coming_ins_value.value, currency: coming_ins_currency};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/coming_ins';\n            fetch(uri, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => {\n                    if (res.status === 401) {\n                        this.props.catchError(res.status);\n                        return\n                    }\n                    else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Что-то пошло не так';\n                        mes.style.display = 'block';\n                        mes.style.color = '#fb0000';\n                        return null;\n                    }\n                    const response = res.json();\n                    return response;\n                })\n                .then(json => {\n                    if (json) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Доход добавлен';\n                        mes.style.display = 'block';\n                        mes.style.color = '#10a000';\n                        coming_ins_name.value = '';\n                        coming_ins_value.value = 0.00;\n                        var coming_ins = this.state.coming_ins;\n                        coming_ins = [json.item].concat(coming_ins);\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency'],\n                            coming_ins: coming_ins\n                        });\n                    }\n                })\n    }\n\n    renderComingInsList() {\n        return this.state.coming_ins.map((coming_in) => {\n            return (\n                <div className='purchase_table_row_wrapper' id={'coming_in_' + coming_in.id}\n                    key={'coming_in_' + coming_in.id} data-id={coming_in.id}>\n                    <div className='purchase_row_item purchase_date_wrapper'>\n                        <span className='purchase_date'>{coming_in.created_at.split('T')[0]}</span>\n                        <span className='purchase_time'>{coming_in.created_at.split('T')[1].split('.')[0]}</span>\n                    </div>\n                    <div className='purchase_info_wrapper'>\n                        <div className='purchase_row_item purchase_name_span_wrapper'>\n                            <span className='purchase_name'>{coming_in.name}</span>\n                        </div>\n                        <div className='purchase_row_item purchase_value_span_wrapper'>\n                            <span className='purchase_value_span'>{coming_in.value}</span>\n                            <span className='purchase_currency_span'> {coming_in.currency_name}</span>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    }\n\n    render () {\n        if (this.props.logged_in) {\n            return (\n                <div className='mainwindow'>\n                    <div className='balance_wrapper'>\n                        <span>Баланс: </span>\n                        <span>{this.state.balance} </span>\n                        {this.state.balance_currency\n                            ? <span>{this.state.balance_currency}</span>\n                            : ''\n                        }\n                    </div>\n\n                    <div className='page_wrapper'>\n                        <div className='create_coming_ins_wrapper page_coming_ins_form' id='create-coming-ins-wrapper-id'>\n                            <div className='purchase_value_label'>\n                                Название дохода\n                            </div>\n                            <div className='purchase_value_wrapper'>\n                                <input type='text' className='purchase_name' id='coming-ins-name-id' />\n                            </div>\n                            <div className='purchase_value_label'>\n                                Полученная сумма\n                            </div>\n                            <div className='purchase_wrapper'>\n                                <div className='purchase_value_wrapper'>\n                                    <input type='number' step='0.01' className='purchase_value' id='coming-ins-value-id' />\n                                </div>\n                                <div className='purchase_currency_wrapper'>\n                                    <select id='coming-ins-currency-id' className='purchase_currency'>\n                                        {this.props.renderCurrencies()}\n                                    </select>\n                                </div>\n                            </div>\n                                <div className='create_purchase_wrapper'>\n                                    <div className='create_purchase_btn' id='create-purchase-id' onClick={this.createPurchase}>\n                                        Отправить\n                                    </div>\n                                </div>\n                            <div className='purchase_create_message' id='coming-ins-create-message-id'>\n                            </div>\n                        </div>\n\n                        <div className='purchase_table_wrapper'>\n                            <div className='purchase_table'>{this.renderComingInsList()}</div>\n                        </div>\n                    </div>\n                </div>\n            )\n        }\n        else {\n            return (\n                <div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default ComingIns","import React, { Component } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Purchase from './components/Purchase';\nimport Accumulation from './components/Accumulation';\nimport Debt from './components/Debt';\nimport Loan from './components/Loan';\nimport ComingIns from './components/ComingIns';\nimport './App.css';\nimport './style.css';\nimport {\n      BrowserRouter as Router,\n      Switch,\n      Route,\n      Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayed_form: 'login',\n            logged_in: localStorage.getItem('token') ? true : false,\n            username: '',\n            currencies: [],\n            balance: 0.0,\n            balance_currency: null,\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            this.setState({displayed_form: ''})\n            fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    if (json) {\n                        this.setState({\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                          headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${localStorage.getItem('token')}`\n                          }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return null;\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    }\n                })\n        }\n        else {\n            this.setState({displayed_form: 'login'});\n        }\n    }\n\n    handle_login = (e, data) => {\n        e.preventDefault();\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/auth', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status !== 200) {\n                    this.catchError(res.status);\n                    throw new Error('Something went wrong');\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                localStorage.setItem('token', json.access_token);\n                localStorage.setItem('refresh_token', json.refresh_token);\n                fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                })\n                    .then(res => {\n                        if (res.status !== 200) {\n                            this.catchError(res.status);\n                            return\n                        }\n                        const response = res.json();\n                        return response;\n                    })\n                    .then(json => {\n                        this.setState({\n                            logged_in: true,\n                            displayed_form: '',\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                            headers: {\n                                'Content-Type': 'application/json',\n                                Authorization: `Bearer ${localStorage.getItem('token')}`\n                            }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    })\n            })\n            .catch(error => {\n                this.setState({logged_in: false});\n                localStorage.removeItem('token');\n            })\n    };\n\n    handle_logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        this.setState({ logged_in: false, username: '', displayed_form: 'login' });\n    };\n\n    refresh_login = () => {\n        var data = {refresh_token: localStorage.getItem('refresh_token')};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/auth/refresh', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.catchError(res.status);\n                    return\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                localStorage.setItem('token', json.access_token);\n                fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                })\n                    .then(res => res.json())\n                    .then(json => {\n                        this.setState({\n                            logged_in: true,\n                            displayed_form: '',\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                          headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${localStorage.getItem('token')}`\n                          }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return null;\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    });\n            })\n    }\n\n    showMenu = (e) => {\n        var menu = document.getElementById('side-bar-id');\n        if (menu.style.display === 'block') {\n            menu.style.display = 'none';\n        }\n        else {\n            menu.style.display = 'block';\n        }\n    }\n\n    catchError = (e) => {\n        this.setState({ logged_in: false, username: '', displayed_form: 'login' });\n        localStorage.removeItem('token');\n        if (localStorage.getItem('refresh_token')) {\n            this.refresh_login();\n        }\n    }\n\n    renderCurrencies() {\n        return this.state.currencies.map((currency) => {\n            return (\n                <option key={'currency-' + currency.id} id={'currency-' + currency.id} data-id={currency.id}>{currency.name}</option>\n            )\n        })\n    }\n\n    chooseTabMoneyMove = (e) => {\n        if (e.target.id === 'purchase-tab-id') {\n            document.getElementById('create-coming-ins-wrapper-id').style.display = 'none';\n            document.getElementById('coming-ins-tab-id').classList.remove('selected_form')\n            document.getElementById('create-purchase-wrapper-id').style.display = 'block';\n            document.getElementById('purchase-tab-id').classList.add('selected_form')\n        }\n        else if (e.target.id === 'coming-ins-tab-id') {\n            document.getElementById('create-purchase-wrapper-id').style.display = 'none';\n            document.getElementById('purchase-tab-id').classList.remove('selected_form')\n            document.getElementById('create-coming-ins-wrapper-id').style.display = 'block';\n            document.getElementById('coming-ins-tab-id').classList.add('selected_form')\n        }\n    }\n\n    createPurchase = (e) => {\n        var purchase_name = document.getElementById('purchase-name-id');\n        var purchase_value = document.getElementById('purchase-value-id');\n        var purchase_currency = document.getElementById('purchase-currency-id');\n        purchase_currency = purchase_currency.options[purchase_currency.selectedIndex].dataset.id;\n        var purchase_complete = document.getElementById('complete-purchase-id').checked;\n        var data = {name: purchase_name.value, value: purchase_value.value, currency: purchase_currency, complete: purchase_complete};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/purchase';\n        if (document.getElementById('loan-purchase-id').checked) {\n            uri = process.env.REACT_APP_BACKEND_URI + '/api/loans';\n        }\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    purchase_name.value = '';\n                    purchase_value.value = 0.00;\n                    document.getElementById('loan-purchase-id').checked = false;\n                    document.getElementById('complete-purchase-id').checked = false;\n                    this.setState({\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency']\n                    });\n                }\n            })\n    }\n\n    createComingIns = (e) => {\n        var coming_ins_name = document.getElementById('coming-ins-name-id');\n        var coming_ins_value = document.getElementById('coming-ins-value-id');\n        var coming_ins_currency = document.getElementById('coming-ins-currency-id');\n        coming_ins_currency = coming_ins_currency.options[coming_ins_currency.selectedIndex].dataset.id;\n        var data = {name: coming_ins_name.value, value: coming_ins_value.value, currency: coming_ins_currency};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/coming_ins';\n            fetch(uri, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => {\n                    if (res.status === 401) {\n                        this.props.catchError(res.status);\n                        return\n                    }\n                    else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Что-то пошло не так';\n                        mes.style.display = 'block';\n                        mes.style.color = '#fb0000';\n                        return null;\n                    }\n                    const response = res.json();\n                    return response;\n                })\n                .then(json => {\n                    if (json) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Доход добавлен';\n                        mes.style.display = 'block';\n                        mes.style.color = '#10a000';\n                        coming_ins_name.value = '';\n                        coming_ins_value.value = 0.00;\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                    }\n                })\n    }\n\n    render() {\n        let form;\n        switch (this.state.displayed_form) {\n          case 'login':\n            form = <LoginForm handle_login={this.handle_login} />;\n            break;\n          default:\n            form = null;\n        }\n\n        var cls_wrapper_name = 'head_page_wrapper';\n        var head_menu = '';\n        var side_bar = '';\n        if (this.state.logged_in) {\n            cls_wrapper_name = 'head_page_wrapper_logged_in';\n            head_menu = (\n                <div className='user_headmenu_wrapper'>\n                    <div className='head_wrapper'>\n                        <div className='menu_btn_wrapper' onClick={this.showMenu}>\n                            <div className='menu_btn'>\n                                &#9776;\n                            </div>\n                        </div>\n                        <div className='username_wrapper'>\n                              {this.state.logged_in\n                                ? `${this.state.username}`\n                                : ''}\n                        </div>\n                        <div className='logout_wrapper' onClick={this.handle_logout}>\n                            <div className='nav_btn' id='logout_btn_id' type='button'>\n                                <img src='./icons/logout.svg' alt='logout' width='30px' />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n            side_bar = (\n                <div className='side_bar_wrapper' id='side-bar-id'>\n                    <div className='side_bar_items_wrapper'>\n                        <h3 className='side_bar_items_header'>Меню</h3>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/' className='side_bar_item'>Главная</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/purchases' className='side_bar_item'>Расходы</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/prescheduled_purchases' className='side_bar_item'>Запланированные покупки</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/loans' className='side_bar_item'>Одолженные суммы</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/debts' className='side_bar_item'>Долги</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/accumulations' className='side_bar_item'>Накопления</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/coming_ins' className='side_bar_item'>Доходы</a>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\">\n                <div className={cls_wrapper_name}>\n                    {head_menu}\n                    {side_bar}\n                    {form}\n                    {this.state.logged_in\n                        ? <div>\n                            <Router>\n                                <switch>\n                                    <Route exact path=\"/\">\n                                        <div className='mainwindow'>\n                                            <div className='balance_wrapper'>\n                                                <span>Баланс: </span>\n                                                <span>{this.state.balance} </span>\n                                                {this.state.balance_currency\n                                                    ? <span>{this.state.balance_currency}</span>\n                                                    : ''\n                                                }\n                                            </div>\n                                            <div className='money_move_selector_wrapper'>\n                                                <div className='money_move_selector'>\n                                                    <div className='money_move_item selected_form' id='purchase-tab-id' onClick={this.chooseTabMoneyMove}>\n                                                        Траты\n                                                    </div>\n                                                    <div className='money_move_item' id='coming-ins-tab-id' onClick={this.chooseTabMoneyMove}>\n                                                        Доходы\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className='create_purchase_wrapper' id='create-purchase-wrapper-id'>\n                                                <div className='purchase_value_label'>\n                                                    Название платежа\n                                                </div>\n                                                <div className='purchase_value_wrapper'>\n                                                    <input type='text' className='purchase_name' id='purchase-name-id' />\n                                                </div>\n                                                <div className='purchase_value_label'>\n                                                    Потраченная сумма\n                                                </div>\n                                                <div className='purchase_wrapper'>\n                                                    <div className='purchase_value_wrapper'>\n                                                        <input type='number' step='0.01' className='purchase_value' id='purchase-value-id' />\n                                                    </div>\n                                                    <div className='purchase_currency_wrapper'>\n                                                        <select id='purchase-currency-id' className='purchase_currency'>\n                                                            {this.renderCurrencies()}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className='complete_purchase_wrapper'>\n                                                    <div className='custom_chbox_wrapper'>\n                                                        <input type='checkbox' id='complete-purchase-id' name='purchase_complete' className='complete_purchase_chbox' />\n                                                        <span className='complete_purchase_chbox_span'></span>\n                                                    </div>\n                                                    <div className='custom_chbox_text_wrapper'>Выполнен</div>\n                                                </div>\n                                                <div className='complete_purchase_wrapper'>\n                                                    <div className='custom_chbox_wrapper'>\n                                                        <input type='checkbox' id='loan-purchase-id' name='loan_complete' className='complete_purchase_chbox' />\n                                                        <span className='complete_purchase_chbox_span'></span>\n                                                    </div>\n                                                    <div className='custom_chbox_text_wrapper'>В долг</div>\n                                                </div>\n                                                <div className='create_purchase_btn_wrapper'>\n                                                    <div className='create_purchase_btn' id='create-purchase-id' onClick={this.createPurchase}>\n                                                        Отправить\n                                                    </div>\n                                                </div>\n                                                <div className='purchase_create_message' id='purchase-create-message-id'>\n                                                </div>\n                                            </div>\n\n                                            <div className='create_coming_ins_wrapper' id='create-coming-ins-wrapper-id'>\n                                                <div className='purchase_value_label'>\n                                                    Название дохода\n                                                </div>\n                                                <div className='purchase_value_wrapper'>\n                                                    <input type='text' className='purchase_name' id='coming-ins-name-id' />\n                                                </div>\n                                                <div className='purchase_value_label'>\n                                                    Полученная сумма\n                                                </div>\n                                                <div className='purchase_wrapper'>\n                                                    <div className='purchase_value_wrapper'>\n                                                        <input type='number' step='0.01' className='purchase_value' id='coming-ins-value-id' />\n                                                    </div>\n                                                    <div className='purchase_currency_wrapper'>\n                                                        <select id='coming-ins-currency-id' className='purchase_currency'>\n                                                            {this.renderCurrencies()}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className='create_coming-ins_wrapper'>\n                                                    <div className='create_purchase_btn' id='create-coming-ins-id' onClick={this.createComingIns}>\n                                                        Отправить\n                                                    </div>\n                                                </div>\n                                                <div className='purchase_create_message' id='coming-ins-create-message-id'>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Route>\n                                    <Route exact path=\"/purchases\">\n                                        <Purchase logged_in={this.state.logged_in} catchError={this.catchError} prescheduled={false}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/prescheduled_purchases\">\n                                        <Purchase logged_in={this.state.logged_in} catchError={this.catchError} prescheduled={true}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/accumulations\">\n                                        <Accumulation logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/debts\">\n                                        <Debt logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/loans\">\n                                        <Loan logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/coming_ins\">\n                                        <ComingIns logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                </switch>\n                            </Router>\n                          </div>\n                        : ''\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}