[{"/home/data/documents/python/money_tracker/frontend/src/index.js":"1","/home/data/documents/python/money_tracker/frontend/src/App.js":"2","/home/data/documents/python/money_tracker/frontend/src/reportWebVitals.js":"3","/home/data/documents/python/money_tracker/frontend/src/components/Accumulation.js":"4","/home/data/documents/python/money_tracker/frontend/src/components/Debt.js":"5","/home/data/documents/python/money_tracker/frontend/src/components/Purchase.js":"6","/home/data/documents/python/money_tracker/frontend/src/components/Loan.js":"7","/home/data/documents/python/money_tracker/frontend/src/components/LoginForm.js":"8","/home/data/documents/python/money_tracker/frontend/src/components/ComingIns.js":"9"},{"size":500,"mtime":1609788314351,"results":"10","hashOfConfig":"11"},{"size":28009,"mtime":1610139679406,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1609788314355,"results":"13","hashOfConfig":"11"},{"size":13631,"mtime":1610218697320,"results":"14","hashOfConfig":"11"},{"size":12576,"mtime":1610218643221,"results":"15","hashOfConfig":"11"},{"size":16696,"mtime":1610218603544,"results":"16","hashOfConfig":"11"},{"size":11527,"mtime":1610219096394,"results":"17","hashOfConfig":"11"},{"size":1725,"mtime":1610133258315,"results":"18","hashOfConfig":"11"},{"size":7782,"mtime":1610218603548,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"190uxnj",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/data/documents/python/money_tracker/frontend/src/index.js",[],["40","41"],"/home/data/documents/python/money_tracker/frontend/src/App.js",["42","43"],"import React, { Component } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Purchase from './components/Purchase';\nimport Accumulation from './components/Accumulation';\nimport Debt from './components/Debt';\nimport Loan from './components/Loan';\nimport ComingIns from './components/ComingIns';\nimport './App.css';\nimport './style.css';\nimport {\n      BrowserRouter as Router,\n      Switch,\n      Route,\n      Link\n} from \"react-router-dom\";\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            displayed_form: 'login',\n            logged_in: localStorage.getItem('token') ? true : false,\n            username: '',\n            currencies: [],\n            balance: 0.0,\n            balance_currency: null,\n        }\n    }\n\n    componentDidMount() {\n        if (this.state.logged_in) {\n            this.setState({displayed_form: ''})\n            fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                }\n            })\n                .then(res => {\n                    if (res.status === 401 || res.status === 403) {\n                        this.catchError(res.status);\n                        return null;\n                    }\n                    return res.json()\n                })\n                .then(json => {\n                    if (json) {\n                        this.setState({\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                          headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${localStorage.getItem('token')}`\n                          }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return null;\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    }\n                })\n        }\n        else {\n            this.setState({displayed_form: 'login'});\n        }\n    }\n\n    handle_login = (e, data) => {\n        e.preventDefault();\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/auth', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status !== 200) {\n                    this.catchError(res.status);\n                    throw new Error('Something went wrong');\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                localStorage.setItem('token', json.access_token);\n                localStorage.setItem('refresh_token', json.refresh_token);\n                fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                })\n                    .then(res => {\n                        if (res.status !== 200) {\n                            this.catchError(res.status);\n                            return\n                        }\n                        const response = res.json();\n                        return response;\n                    })\n                    .then(json => {\n                        this.setState({\n                            logged_in: true,\n                            displayed_form: '',\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                            headers: {\n                                'Content-Type': 'application/json',\n                                Authorization: `Bearer ${localStorage.getItem('token')}`\n                            }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    })\n            })\n            .catch(error => {\n                this.setState({logged_in: false});\n                localStorage.removeItem('token');\n            })\n    };\n\n    handle_logout = () => {\n        localStorage.removeItem('token');\n        localStorage.removeItem('refresh_token');\n        this.setState({ logged_in: false, username: '', displayed_form: 'login' });\n    };\n\n    refresh_login = () => {\n        var data = {refresh_token: localStorage.getItem('refresh_token')};\n        fetch(process.env.REACT_APP_BACKEND_URI + '/api/auth/refresh', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.catchError(res.status);\n                    return\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                localStorage.setItem('token', json.access_token);\n                fetch(process.env.REACT_APP_BACKEND_URI + '/api/account', {\n                    headers: {\n                        'Content-Type': 'application/json',\n                        Authorization: `Bearer ${localStorage.getItem('token')}`\n                    }\n                })\n                    .then(res => res.json())\n                    .then(json => {\n                        this.setState({\n                            logged_in: true,\n                            displayed_form: '',\n                            username: json.user['first_name'],\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                        fetch(process.env.REACT_APP_BACKEND_URI + '/api/currency', {\n                          headers: {\n                            'Content-Type': 'application/json',\n                            Authorization: `Bearer ${localStorage.getItem('token')}`\n                          }\n                        })\n                            .then(res => {\n                                if (res.status !== 200) {\n                                    this.catchError(res.status);\n                                    return null;\n                                }\n                                const response = res.json();\n                                return response;\n                            })\n                            .then(json => {\n                                this.setState({ currencies: json.items });\n                            })\n                    });\n            })\n    }\n\n    showMenu = (e) => {\n        var menu = document.getElementById('side-bar-id');\n        if (menu.style.display === 'block') {\n            menu.style.display = 'none';\n        }\n        else {\n            menu.style.display = 'block';\n        }\n    }\n\n    catchError = (e) => {\n        this.setState({ logged_in: false, username: '', displayed_form: 'login' });\n        localStorage.removeItem('token');\n        if (localStorage.getItem('refresh_token')) {\n            this.refresh_login();\n        }\n    }\n\n    renderCurrencies() {\n        return this.state.currencies.map((currency) => {\n            return (\n                <option key={'currency-' + currency.id} id={'currency-' + currency.id} data-id={currency.id}>{currency.name}</option>\n            )\n        })\n    }\n\n    chooseTabMoneyMove = (e) => {\n        if (e.target.id === 'purchase-tab-id') {\n            document.getElementById('create-coming-ins-wrapper-id').style.display = 'none';\n            document.getElementById('coming-ins-tab-id').classList.remove('selected_form')\n            document.getElementById('create-purchase-wrapper-id').style.display = 'block';\n            document.getElementById('purchase-tab-id').classList.add('selected_form')\n        }\n        else if (e.target.id === 'coming-ins-tab-id') {\n            document.getElementById('create-purchase-wrapper-id').style.display = 'none';\n            document.getElementById('purchase-tab-id').classList.remove('selected_form')\n            document.getElementById('create-coming-ins-wrapper-id').style.display = 'block';\n            document.getElementById('coming-ins-tab-id').classList.add('selected_form')\n        }\n    }\n\n    createPurchase = (e) => {\n        var purchase_name = document.getElementById('purchase-name-id');\n        var purchase_value = document.getElementById('purchase-value-id');\n        var purchase_currency = document.getElementById('purchase-currency-id');\n        purchase_currency = purchase_currency.options[purchase_currency.selectedIndex].dataset.id;\n        var purchase_complete = document.getElementById('complete-purchase-id').checked;\n        var data = {name: purchase_name.value, value: purchase_value.value, currency: purchase_currency, complete: purchase_complete};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/purchase';\n        if (document.getElementById('loan-purchase-id').checked) {\n            uri = process.env.REACT_APP_BACKEND_URI + '/api/loans';\n        }\n        fetch(uri, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${localStorage.getItem('token')}`\n            },\n            body: JSON.stringify(data)\n        })\n            .then(res => {\n                if (res.status === 401) {\n                    this.props.catchError(res.status);\n                    return\n                }\n                else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Что-то пошло не так';\n                    mes.style.display = 'block';\n                    mes.style.color = '#fb0000';\n                    return null;\n                }\n                const response = res.json();\n                return response;\n            })\n            .then(json => {\n                if (json) {\n                    let mes = document.getElementById('purchase-create-message-id');\n                    mes.innerHTML = 'Платеж создан';\n                    mes.style.display = 'block';\n                    mes.style.color = '#10a000';\n                    purchase_name.value = '';\n                    purchase_value.value = 0.00;\n                    document.getElementById('loan-purchase-id').checked = false;\n                    document.getElementById('complete-purchase-id').checked = false;\n                    this.setState({\n                        balance: json.balance['value'],\n                        balance_currency: json.balance['currency']\n                    });\n                }\n            })\n    }\n\n    createComingIns = (e) => {\n        var coming_ins_name = document.getElementById('coming-ins-name-id');\n        var coming_ins_value = document.getElementById('coming-ins-value-id');\n        var coming_ins_currency = document.getElementById('coming-ins-currency-id');\n        coming_ins_currency = coming_ins_currency.options[coming_ins_currency.selectedIndex].dataset.id;\n        var data = {name: coming_ins_name.value, value: coming_ins_value.value, currency: coming_ins_currency};\n        var uri = process.env.REACT_APP_BACKEND_URI + '/api/coming_ins';\n            fetch(uri, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${localStorage.getItem('token')}`\n                },\n                body: JSON.stringify(data)\n            })\n                .then(res => {\n                    if (res.status === 401) {\n                        this.props.catchError(res.status);\n                        return\n                    }\n                    else if (res.status === 406 || res.status === 500 || res.status === 400) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Что-то пошло не так';\n                        mes.style.display = 'block';\n                        mes.style.color = '#fb0000';\n                        return null;\n                    }\n                    const response = res.json();\n                    return response;\n                })\n                .then(json => {\n                    if (json) {\n                        let mes = document.getElementById('coming-ins-create-message-id');\n                        mes.innerHTML = 'Доход добавлен';\n                        mes.style.display = 'block';\n                        mes.style.color = '#10a000';\n                        coming_ins_name.value = '';\n                        coming_ins_value.value = 0.00;\n                        this.setState({\n                            balance: json.balance['value'],\n                            balance_currency: json.balance['currency']\n                        });\n                    }\n                })\n    }\n\n    render() {\n        let form;\n        switch (this.state.displayed_form) {\n          case 'login':\n            form = <LoginForm handle_login={this.handle_login} />;\n            break;\n          default:\n            form = null;\n        }\n\n        var cls_wrapper_name = 'head_page_wrapper';\n        var head_menu = '';\n        var side_bar = '';\n        if (this.state.logged_in) {\n            cls_wrapper_name = 'head_page_wrapper_logged_in';\n            head_menu = (\n                <div className='user_headmenu_wrapper'>\n                    <div className='head_wrapper'>\n                        <div className='menu_btn_wrapper' onClick={this.showMenu}>\n                            <div className='menu_btn'>\n                                &#9776;\n                            </div>\n                        </div>\n                        <div className='username_wrapper'>\n                              {this.state.logged_in\n                                ? `${this.state.username}`\n                                : ''}\n                        </div>\n                        <div className='logout_wrapper' onClick={this.handle_logout}>\n                            <div className='nav_btn' id='logout_btn_id' type='button'>\n                                <img src='./icons/logout.svg' alt='logout' width='30px' />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n            side_bar = (\n                <div className='side_bar_wrapper' id='side-bar-id'>\n                    <div className='side_bar_items_wrapper'>\n                        <h3 className='side_bar_items_header'>Меню</h3>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/' className='side_bar_item'>Главная</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/purchases' className='side_bar_item'>Расходы</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/prescheduled_purchases' className='side_bar_item'>Запланированные покупки</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/loans' className='side_bar_item'>Одолженные суммы</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/debts' className='side_bar_item'>Долги</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/accumulations' className='side_bar_item'>Накопления</a>\n                        </div>\n                        <div className='side_bar_item_wrapper'>\n                            <a href='/coming_ins' className='side_bar_item'>Доходы</a>\n                        </div>\n                    </div>\n                </div>\n            );\n        }\n        return (\n            <div className=\"App\">\n                <div className={cls_wrapper_name}>\n                    {head_menu}\n                    {side_bar}\n                    {form}\n                    {this.state.logged_in\n                        ? <div>\n                            <Router>\n                                <switch>\n                                    <Route exact path=\"/\">\n                                        <div className='mainwindow'>\n                                            <div className='balance_wrapper'>\n                                                <span>Баланс: </span>\n                                                <span>{this.state.balance} </span>\n                                                {this.state.balance_currency\n                                                    ? <span>{this.state.balance_currency}</span>\n                                                    : ''\n                                                }\n                                            </div>\n                                            <div className='money_move_selector_wrapper'>\n                                                <div className='money_move_selector'>\n                                                    <div className='money_move_item selected_form' id='purchase-tab-id' onClick={this.chooseTabMoneyMove}>\n                                                        Траты\n                                                    </div>\n                                                    <div className='money_move_item' id='coming-ins-tab-id' onClick={this.chooseTabMoneyMove}>\n                                                        Доходы\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            <div className='create_purchase_wrapper' id='create-purchase-wrapper-id'>\n                                                <div className='purchase_value_label'>\n                                                    Название платежа\n                                                </div>\n                                                <div className='purchase_value_wrapper'>\n                                                    <input type='text' className='purchase_name' id='purchase-name-id' />\n                                                </div>\n                                                <div className='purchase_value_label'>\n                                                    Потраченная сумма\n                                                </div>\n                                                <div className='purchase_wrapper'>\n                                                    <div className='purchase_value_wrapper'>\n                                                        <input type='number' step='0.01' className='purchase_value' id='purchase-value-id' />\n                                                    </div>\n                                                    <div className='purchase_currency_wrapper'>\n                                                        <select id='purchase-currency-id' className='purchase_currency'>\n                                                            {this.renderCurrencies()}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className='complete_purchase_wrapper'>\n                                                    <div className='custom_chbox_wrapper'>\n                                                        <input type='checkbox' id='complete-purchase-id' name='purchase_complete' className='complete_purchase_chbox' />\n                                                        <span className='complete_purchase_chbox_span'></span>\n                                                    </div>\n                                                    <div className='custom_chbox_text_wrapper'>Выполнен</div>\n                                                </div>\n                                                <div className='complete_purchase_wrapper'>\n                                                    <div className='custom_chbox_wrapper'>\n                                                        <input type='checkbox' id='loan-purchase-id' name='loan_complete' className='complete_purchase_chbox' />\n                                                        <span className='complete_purchase_chbox_span'></span>\n                                                    </div>\n                                                    <div className='custom_chbox_text_wrapper'>В долг</div>\n                                                </div>\n                                                <div className='create_purchase_btn_wrapper'>\n                                                    <div className='create_purchase_btn' id='create-purchase-id' onClick={this.createPurchase}>\n                                                        Отправить\n                                                    </div>\n                                                </div>\n                                                <div className='purchase_create_message' id='purchase-create-message-id'>\n                                                </div>\n                                            </div>\n\n                                            <div className='create_coming_ins_wrapper' id='create-coming-ins-wrapper-id'>\n                                                <div className='purchase_value_label'>\n                                                    Название дохода\n                                                </div>\n                                                <div className='purchase_value_wrapper'>\n                                                    <input type='text' className='purchase_name' id='coming-ins-name-id' />\n                                                </div>\n                                                <div className='purchase_value_label'>\n                                                    Полученная сумма\n                                                </div>\n                                                <div className='purchase_wrapper'>\n                                                    <div className='purchase_value_wrapper'>\n                                                        <input type='number' step='0.01' className='purchase_value' id='coming-ins-value-id' />\n                                                    </div>\n                                                    <div className='purchase_currency_wrapper'>\n                                                        <select id='coming-ins-currency-id' className='purchase_currency'>\n                                                            {this.renderCurrencies()}\n                                                        </select>\n                                                    </div>\n                                                </div>\n                                                <div className='create_coming-ins_wrapper'>\n                                                    <div className='create_purchase_btn' id='create-coming-ins-id' onClick={this.createComingIns}>\n                                                        Отправить\n                                                    </div>\n                                                </div>\n                                                <div className='purchase_create_message' id='coming-ins-create-message-id'>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </Route>\n                                    <Route exact path=\"/purchases\">\n                                        <Purchase logged_in={this.state.logged_in} catchError={this.catchError} prescheduled={false}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/prescheduled_purchases\">\n                                        <Purchase logged_in={this.state.logged_in} catchError={this.catchError} prescheduled={true}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/accumulations\">\n                                        <Accumulation logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/debts\">\n                                        <Debt logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/loans\">\n                                        <Loan logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                    <Route exact path=\"/coming_ins\">\n                                        <ComingIns logged_in={this.state.logged_in} catchError={this.catchError}\n                                            renderCurrencies={this.renderCurrencies.bind(this)} />\n                                    </Route>\n                                </switch>\n                            </Router>\n                          </div>\n                        : ''\n                    }\n                </div>\n            </div>\n        );\n    }\n\n}\n\nexport default App;\n","/home/data/documents/python/money_tracker/frontend/src/reportWebVitals.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/Accumulation.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/Debt.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/Purchase.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/Loan.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/LoginForm.js",[],"/home/data/documents/python/money_tracker/frontend/src/components/ComingIns.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":12,"column":7,"nodeType":"50","messageId":"51","endLine":12,"endColumn":13},{"ruleId":"48","severity":1,"message":"52","line":14,"column":7,"nodeType":"50","messageId":"51","endLine":14,"endColumn":11},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]